events {
    worker_connections 1024;
}

http {
    upstream service-discovery {
        server service-discovery:8000;
    }
    
    upstream config-service {
        server config-service:8001;
    }
    
    upstream spiderfoot-web {
        server spiderfoot-web:5001;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name _;
        
        # Health check for the gateway itself
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Service Discovery routes
        location /api/discovery/ {
            proxy_pass http://service-discovery/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Configuration Service routes
        location /api/config/ {
            proxy_pass http://config-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Legacy SpiderFoot Web UI (for backward compatibility)
        location / {
            proxy_pass http://spiderfoot-web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Load balancing and failover
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}